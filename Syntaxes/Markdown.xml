<?xml version="1.0" encoding="UTF-8"?>
<syntax name="text.markdown">
	<zones>
		<include collection="markdown.code"/>
		<include collection="markdown.escapes"/>
		<include collection="markdown.headers"/>
		
		<!-- START HORIZONTAL RULE; should this be in a collection for nesting purposes? -->
		<zone name="structural.separator">
			<starts-with>
				<expression>^\s*([\*_-])\s*\1\s*\1</expression>
			</starts-with>
			<ends-with>
				<expression>$\n</expression>
			</ends-with>
		</zone>
		
		<include collection="markdown.quotes"/>
		<include collection="markdown.stylistic"/>
		<include collection="markdown.lists"/>
		<include collection="markdown.links"/>
		<include collection="markdown.ref"/>
		
		<!-- BEGIN HTML EMBEDDING -->
		<zone>
			<!-- Single line HTML block -->
			<expression>^&lt;([a-zA-Z0-9:]+).*>.*&lt;/\1>$</expression>
			<capture number="0" name="text.html">
				<subzones>
					<include syntax="text.html.basic"/>
				</subzones>
			</capture>
		</zone>
		
		<zone name="text.html">
			<!-- Multi-line HTML block -->
			<starts-with>
				<expression>(?=^&lt;([a-zA-Z0-9:]+))</expression>
			</starts-with>
			<!-- This is hacktastic, but I can't figure out any way to get the ends-with evaluated in the HTML syntax -->
			<ends-with>
				<expression>^(&lt;/)(\1)(>)$</expression>
				<capture number="0" name="tag.close.other.html"/>
				<capture number="1" name="punctuation.definition.begin"/>
				<capture number="2" name="entity.name"/>
				<capture number="3" name="punctuation.definition.end"/>
			</ends-with>
			<subzones>
				<include syntax="text.html.basic"/>
			</subzones>
		</zone>
	</zones>
	
	<library>
		<collection name="markdown.escapes">
			<zone name="literal.escape.markdown">
				<expression>\\(\\|`|\*|_|\{|}|\[|]|\(|\)|#|\+|-|\.|!)</expression>
			</zone>
		</collection>
		
		<!-- BEGIN CODE COLLECTIONS -->
		<collection name="markdown.code">
			<zone name="structural.container.code.block">
				<starts-with>
					<expression>^(\t+|( {4})+)</expression>
				</starts-with>
				<ends-with>
					<expression>^$</expression>
				</ends-with>
			</zone>
			<include collection="markdown.code.inline"/>
		</collection>
		
		<collection name="markdown.code.nested">
			<!-- For use in lists -->
			<zone name="structural.container.code.block">
				<starts-with>
					<expression>^(\t{2,}|( {4}){2,})</expression>
				</starts-with>
				<ends-with>
					<expression>^$</expression>
				</ends-with>
			</zone>
			<include collection="markdown.code.inline"/>
		</collection>
		
		<collection name="markdown.code.quoted">
			<!-- For use in blockquotes -->
			<zone name="structural.container.code.block">
				<starts-with>
					<expression>\t+|( {4})+[^\s]</expression>
				</starts-with>
				<ends-with>
					<expression>(?=^(>\s*)*$)</expression>
				</ends-with>
			</zone>
			<include collection="markdown.code.inline"/>
		</collection>
		
		<collection name="markdown.code.inline">
			<zone name="structural.container.code.inline">
				<starts-with>
					<expression>(`+)</expression>
					<capture number="0" name="delimiter.balanced.backtick.begin"/>
				</starts-with>
				<ends-with>
					<expression>\1</expression>
					<capture number="0" name="delimiter.balanced.backtick.end"/>
				</ends-with>
			</zone>
		</collection>
		
		<!-- BEGIN BLOCKQUOTE COLLECTIONS -->
		<collection name="markdown.quotes">
			<zone name="structural.container.blockquote">
				<starts-with>
					<expression>(?=^> ?)</expression>
				</starts-with>
				<ends-with>
					<expression>(?=^$)</expression>
				</ends-with>
				<subzones>
					<include collection="markdown.quotes.delimiter"/>
					<include collection="markdown.quotes.children"/>
				</subzones>
			</zone>
		</collection>
		
		<collection name="markdown.quotes.nested">
			<!-- For use in lists -->
			<zone name="structural.container.blockquote">
				<starts-with>
					<expression>^(\t| {4})(?=> ?)</expression>
				</starts-with>
				<ends-with>
					<expression>(?=^\s*$)</expression>
				</ends-with>
				<subzones>
					<include collection="markdown.quotes.delimiter"/>
					<include collection="markdown.escapes"/>
					<include collection="markdown.code.nested"/>
					<include collection="markdown.lists.nested"/>
					<include collection="markdown.stylistic"/>
					<include collection="markdown.headers"/>
					<include colleciotn="markdown.links"/>
				</subzones>
			</zone>
		</collection>
		
		<collection name="markdown.quotes.delimiter">
			<zone>
				<expression>((> ?)*>) ?</expression>
				<capture number="1" name="delimiter.structural.declarative"/>
			</zone>
		</collection>
		
		<collection name="markdown.quotes.children">
			<include collection="markdown.escapes"/>
			<include collection="markdown.code.quoted"/>
			<include collection="markdown.lists.nested"/>
			<include collection="markdown.stylistic"/>
			<include collection="markdown.headers"/>
			<include colleciotn="markdown.links"/>
		</collection>
		
		<!-- BEGIN HEADER COLLECTIONS -->
		<collection name="markdown.headers">
			<!-- ATX HEADERs -->
			<zone name="structural.header.atx.title">
				<expression>(#) .+?( (#+))?$</expression>
				<capture number="1" name="delimiter.balanced.begin.hash"/>
				<capture number="3" name="delimiter.balanced.end.hash"/>
			</zone>
			
			<zone name="structural.header.atx.section">
				<expression>(#{2}) .+?( (#+))?$</expression>
				<capture number="1" name="delimiter.balanced.begin.hash"/>
				<capture number="3" name="delimiter.balanced.end.hash"/>
			</zone>
			
			<zone name="structural.header.atx.tertiary">
				<expression>(#{3,6}) .+?( (#+))?$</expression>
				<capture number="1" name="delimiter.balanced.begin.hash"/>
				<capture number="3" name="delimiter.balanced.end.hash"/>
			</zone>
			
			<!-- SETEXT HEADERS are a big problem; for now just defining the underline as the header metadata because I can't think of a way to capture the whole thing -->
			<zone name="structural.header.setext.title">
				<starts-with>
					<expression>^(={4,})</expression>
					<capture number="1" name="metadata.structural.header"/>
				</starts-with>
				<ends-with>
					<expression>$\n</expression>
				</ends-with>
			</zone>
			<!-- This zone competes with one type of HR, but I don't see any easy workarounds -->
			<zone name="structural.header.setext.section">
				<starts-with>
					<expression>^(-{4,})</expression>
					<capture number="1" name="metadata.structural.header"/>
				</starts-with>
				<ends-with>
					<expression>$\n</expression>
				</ends-with>
			</zone>
			
		</collection>
		
		<!-- BEGIN LIST COLLECTIONS -->
		<collection name="markdown.lists">
			<zone name="structural.container.list.unordered">
				<starts-with>
					<expression>(?=^\s*[-+\*]\s+.)</expression>
				</starts-with>
				<ends-with>
					<expression>(?=^$)</expression>
				</ends-with>
				<subzones>
					<zone name="structural.container.list.element">
						<starts-with>
							<expression>^\s*([-+\*])\s+</expression>
							<capture number="1" name="delimiter.structural.declarative"/>
						</starts-with>
						<ends-with>
							<expression>(?=^\s*[-+\*]\s)|(?=^$)</expression>
						</ends-with>
						<subzones>
							<include collection="markdown.list.children"/>
						</subzones>
					</zone>
				</subzones>
			</zone>
			
			<zone name="structural.container.list.ordered">
				<starts-with>
					<expression>(?=^\s*[0-9]+\.\s+.)</expression>
				</starts-with>
				<ends-with>
					<expression>(?=^$)</expression>
				</ends-with>
				<subzones>
					<zone name="structural.container.list.element">
						<starts-with>
							<expression>^\s*([0-9]+\.)\s+</expression>
							<capture number="1" name="delimiter.structural.declarative"/>
						</starts-with>
						<ends-with>
							<expression>(?=^\s*[0-9]+\.\s)|(?=^$)</expression>
						</ends-with>
						<subzones>
							<include collection="markdown.list.children"/>
						</subzones>
					</zone>
				</subzones>
			</zone>
		</collection>
		
		<collection name="markdown.lists.nested">
			<!-- For inclusion in blockquotes -->
			<zone name="structural.container.list.unordered">
				<starts-with>
					<expression>(?=\s*[-+\*]\s+.)</expression>
				</starts-with>
				<ends-with>
					<expression>(?=^(>\s*)*$)</expression>
				</ends-with>
				<subzones>
					<zone name="structural.container.list.element">
						<starts-with>
							<expression>\s*([-+\*])\s+</expression>
							<capture number="1" name="delimiter.structural.declarative"/>
						</starts-with>
						<ends-with>
							<expression>(?=\s*[-+\*]\s)|(?=^(>\s*)*$)</expression>
						</ends-with>
						<subzones>
							<include collection="markdown.quotes.delimiter"/>
							<include collection="markdown.list.children"/>
						</subzones>
					</zone>
				</subzones>
			</zone>
			
			<zone name="structural.container.list.ordered">
				<starts-with>
					<expression>(?=\s*[0-9]+\.\s+.)</expression>
				</starts-with>
				<ends-with>
					<expression>(?=^(>\s*)*$)</expression>
				</ends-with>
				<subzones>
					<zone name="structural.container.list.element">
						<starts-with>
							<expression>\s*([0-9]+\.)\s+</expression>
							<capture number="1" name="delimiter.structural.declarative"/>
						</starts-with>
						<ends-with>
							<expression>(?=\s*[0-9]+\.\s)|(?=^(>\s*)*$)</expression>
						</ends-with>
						<subzones>
							<include collection="markdown.quotes.delimiter"/>
							<include collection="markdown.list.children"/>
						</subzones>
					</zone>
				</subzones>
			</zone>
		</collection>
		
		<collection name="markdown.list.children">
			<include collection="markdown.escapes"/>
			<include collection="markdown.quotes.nested"/>
			<include collection="markdown.code.nested"/>
			<include collection="markdown.links"/>
			<include collection="markdown.stylistic"/>
			<include collection="markdown.headers"/>
		</collection>
		
		<!-- BEGIN INLINE STYLE COLLECTIONS -->
		<collection name="markdown.stylistic">
			<include collection="markdown.bold"/>
			<include collection="markdown.slant"/>
		</collection>
		
		<collection name="markdown.bold">
			<!-- !BOLD -->
			<zone name="stylistic.typography.weight">
				<starts-with>
					<expression>([\*_]{2})(?=\S)</expression>
					<capture number="1" name="delimiter.balanced.begin"/>
				</starts-with>
				<ends-with>
					<expression>\1</expression>
					<capture number="0" name="delimiter.balanced.end"/>
				</ends-with>
				<subzones>
					<include collection="markdown.slant"/>
				</subzones>
			</zone>
		</collection>
		
		<collection name="markdown.slant">
			<!-- !ITALIC -->
			<zone name="stylistic.typography.variant.slant">
				<starts-with>
					<expression>([\*_])(?=\S)</expression>
					<capture number="1" name="delimiter.balanced.begin"/>
				</starts-with>
				<ends-with>
					<expression>\1</expression>
					<capture number="0" name="delimiter.balanced.end"/>
				</ends-with>
				<subzones>
					<include collection="markdown.bold"/>
				</subzones>
			</zone>
		</collection>
		
		<!-- BEGIN LINKS AND IMAGES -->
		<collection name="markdown.links">
			<!-- AUTO LINK / E-MAIL -->
			<zone name="structural.connector.link.external">
				<expression>(&lt;)(https?://.*?)(>)</expression>
				<capture number="1" name="delimiter.balanced.begin.bracket"/>
				<capture number="2" name="literal.string.url"/>
				<capture number="3" name="delimiter.balanced.end.bracket"/>
			</zone>
			<zone name="structural.connector.link.internal">
				<expression>(&lt;)(/|[a-zA-Z0-9_-]/.*?)(>)</expression>
				<capture number="1" name="delimiter.balanced.begin.bracket"/>
				<capture number="2" name="literal.string.url"/>
				<capture number="3" name="delimiter.balanced.end.bracket"/>
			</zone>
			<zone name="structural.connector.link.contact">
				<expression>(&lt;)([a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,6})(>)</expression>
				<capture number="1" name="delimiter.balanced.begin.bracket"/>
				<capture number="2" name="literal.string.email"/>
				<capture number="3" name="delimiter.balanced.end.bracket"/>
			</zone>
			<zone name="structural.connector.link.unknown">
				<expression>(&lt;)([^\s]+?\.[^\s]+?)(>)</expression>
				<capture number="1" name="delimiter.balanced.begin.bracket"/>
				<capture number="2" name="literal.string.url"/>
				<capture number="3" name="delimiter.balanced.end.bracket"/>
			</zone>
			
			<!-- NORMAL LINK -->
			<zone name="structural.connector.link.inline">
				<expression>(\[).+?(\]) ?(\()([^\s]+?)(\s+(['"])(.+?)(\6))?(\))</expression>
				<capture number="1" name="delimiter.balanced.begin.square-brace"/>
				<capture number="2" name="delimiter.balanced.end.square-brace"/>
				<capture number="3" name="delimiter.balanced.begin.parenthesis"/>
				<capture number="4" name="literal.string.url"/>
				<capture number="6" name="delimiter.balanced.begin.quote"/>
				<capture number="7" name="literal.string.title"/>
				<capture number="8" name="delimiter.balanced.end.quote"/>
				<capture number="9" name="delimiter.balanced.end.parenthesis"/>
			</zone>
			
			<!-- REFERENCE LINKS -->
			<zone name="structural.connector.link.reference">
				<expression>(\[).+?(\]) ?(\[)(.+?)(\])</expression>
				<capture number="1" name="delimiter.balanced.begin.square-brace"/>
				<capture number="2" name="delimiter.balanced.end.square-brace"/>
				<capture number="3" name="delimiter.balanced.begin.square-brace"/>
				<capture number="4" name="keyword.internal.reference"/>
				<capture number="5" name="delimiter.balanced.end.square-brace"/>
			</zone>
			
			<zone name="structural.connector.link.reference">
				<expression>(\[)(.+?)(\]) ?(\[)(\])</expression>
				<capture number="1" name="delimiter.balanced.begin.square-brace"/>
				<!--<capture number="2" name="keyword.internal.reference"/>-->
				<capture number="3" name="delimiter.balanced.end.square-brace"/>
				<capture number="4" name="delimiter.balanced.begin.square-brace"/>
				<capture number="5" name="delimiter.balanced.end.square-brace"/>
			</zone>
					
			<!-- NORMAL IMAGE -->
			<zone name="structural.connector.image.inline">
				<expression>(!)(\[)(.*)(\])(\()(.+?)(\s+(['"])(.+?)(\8))?(\))</expression>
				<capture number="1" name="delimiter.structural.declarative"/>
				<capture number="2" name="delimiter.balanced.begin.square-brace"/>
				
				<capture number="4" name="delimiter.balanced.end.square-brace"/>
				<capture number="5" name="delimiter.balanced.begin.parenthesis"/>
				<capture number="6" name="literal.string.url"/>
				<capture number="8" name="delimiter.balanced.begin.quote"/>
				<capture number="9" name="literal.string.title"/>
				<capture number="10" name="delimiter.balanced.end.quote"/>
				<capture number="11" name="delimiter.balanced.end.parenthesis"/>
			</zone>
			
			<!-- REFERENCE IMAGE -->
			<zone name="structural.connector.image.reference">
				<expression>(!)(\[)(.*)(\])(\[)(.+?)(\])</expression>
				<capture number="1" name="delimiter.structural.declarative"/>
				<capture number="2" name="delimiter.balanced.begin.square-brace"/>
				<capture number="4" name="delimiter.balanced.end.square-brace"/>
				<capture number="5" name="delimiter.balanced.begin.square-brace"/>
				<capture number="6" name="keyword.internal.reference"/>
				<capture number="7" name="delimiter.balanced.end.square-brace"/>
			</zone>
		</collection>
		
		<collection name="markdown.ref">
			<!-- REFERENCE DEFINITION -->
			<zone name="metadata.internal.reference">
				<starts-with>
					<expression>^ {0,3}(\[)(.+)(\])(:)\s+(&lt;?)([^\s>]+)(>?)</expression>
					<capture number="1" name="delimiter.balanced.begin.square-brace"/>
					<capture number="2" name="keyword.internal.reference"/>
					<capture number="3" name="delimiter.balanced.end.square-brace"/>
					<capture number="4" name="delimiter.separator.pairing"/>
					<capture number="5" name="delimiter.balanced.begin.bracket"/>
					<capture number="6" name="literal.string.url"/>
					<capture number="7" name="delimiter.balanced.end.bracket"/>
				</starts-with>
				<ends-with>
					<!--This might need revising; currently, with no title the item will span the line because I have to get to the next line to check it for the patterns that will clear the item-->
					<expression>((\s+(['"\(])(.+?)(\9|\)))$)|((?=^\s*$)|(?=^\s*\[.+\]:))</expression>
					<capture number="3" name="delimiter.balanced.begin"/>
					<capture number="4" name="literal.string.title"/>
					<capture number="5" name="delimiter.balanced.end"/>
				</ends-with>
			</zone>
		</collection>
	</library>
</syntax>